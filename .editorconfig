root = true

# All files
[*]
charset = utf-8
end_of_line = lf
insert_final_newline = false

# XML files 
[*.xml]
charset = utf-8
end_of_line = crlf
insert_final_newline = false

# C# files
[*.cs]

#### Options EditorConfig principales ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### NET coding conventions ####

# Organise instructions Using
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false

# Preferences of this. and Me.
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# Language keyword preferences over BCL types
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parenthesis preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression level preferences
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:warning
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = false:silent
dotnet_style_prefer_conditional_expression_over_return = false:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:warning

#### C# coding conventions ####

# Var preferences
csharp_style_var_elsewhere = false:warning
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = false:warning

# Membres expression-bodied
csharp_style_expression_bodied_accessors = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = false:silent
csharp_style_expression_bodied_lambdas = false:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = false:silent

# Preferences corresponding to the model
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_switch_expression = false:silent

# Null value verification preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier Preferences
csharp_prefer_static_local_function = false:silent
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code block preferences
csharp_prefer_braces = true:warning
csharp_prefer_simple_using_statement = false:silent

# Expression level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# Preferences for the 'using' directive
csharp_using_directive_placement = outside_namespace:error

#### C# formatting rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Setback preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Back to Line Preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Naming styles ####

# Naming rules
dotnet_naming_rule.interface_should_be_commence_par_i.severity = error
dotnet_naming_rule.interface_should_be_commence_par_i.symbols = interface
dotnet_naming_rule.interface_should_be_commence_par_i.style = commence_par_i

dotnet_naming_rule.class_should_be_pascal_case.severity = warning
dotnet_naming_rule.class_should_be_pascal_case.symbols = class
dotnet_naming_rule.class_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.méthode_should_be_pascal_case.severity = warning
dotnet_naming_rule.méthode_should_be_pascal_case.symbols = méthode
dotnet_naming_rule.méthode_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.méthode_privée_should_be_pascal_case.severity = warning
dotnet_naming_rule.méthode_privée_should_be_pascal_case.symbols = méthode_privée
dotnet_naming_rule.méthode_privée_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.property_should_be_pascal_case.severity = warning
dotnet_naming_rule.property_should_be_pascal_case.symbols = property
dotnet_naming_rule.property_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.champ_public_ou_protégé_should_be_pascal_case.severity = warning
dotnet_naming_rule.champ_public_ou_protégé_should_be_pascal_case.symbols = champ_public_ou_protégé
dotnet_naming_rule.champ_public_ou_protégé_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.champ_statique_should_be_pascal_case.severity = warning
dotnet_naming_rule.champ_statique_should_be_pascal_case.symbols = champ_statique
dotnet_naming_rule.champ_statique_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.champ_privé_ou_interne_should_be_pascal_case.severity = warning
dotnet_naming_rule.champ_privé_ou_interne_should_be_pascal_case.symbols = champ_privé_ou_interne
dotnet_naming_rule.champ_privé_ou_interne_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.champ_statique_privé_ou_interne_should_be_pascal_case.severity = warning
dotnet_naming_rule.champ_statique_privé_ou_interne_should_be_pascal_case.symbols = champ_statique_privé_ou_interne
dotnet_naming_rule.champ_statique_privé_ou_interne_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.membres_autres_que_des_champs_should_be_camel_case.severity = warning
dotnet_naming_rule.membres_autres_que_des_champs_should_be_camel_case.symbols = membres_autres_que_des_champs
dotnet_naming_rule.membres_autres_que_des_champs_should_be_camel_case.style = camel_case

dotnet_naming_rule.paramètre_should_be_camel_case.severity = warning
dotnet_naming_rule.paramètre_should_be_camel_case.symbols = paramètre
dotnet_naming_rule.paramètre_should_be_camel_case.style = camel_case

dotnet_naming_rule.type_parameters.style = begins_with_t

# Symbol specifications

dotnet_naming_symbols.class.applicable_kinds = class
dotnet_naming_symbols.class.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.class.required_modifiers = 

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.méthode.applicable_kinds = method
dotnet_naming_symbols.méthode.applicable_accessibilities = public
dotnet_naming_symbols.méthode.required_modifiers = 

dotnet_naming_symbols.méthode_privée.applicable_kinds = method
dotnet_naming_symbols.méthode_privée.applicable_accessibilities = private
dotnet_naming_symbols.méthode_privée.required_modifiers = 

dotnet_naming_symbols.property.applicable_kinds = property
dotnet_naming_symbols.property.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.property.required_modifiers = 

dotnet_naming_symbols.champ_public_ou_protégé.applicable_kinds = field
dotnet_naming_symbols.champ_public_ou_protégé.applicable_accessibilities = public, protected
dotnet_naming_symbols.champ_public_ou_protégé.required_modifiers = 

dotnet_naming_symbols.champ_statique.applicable_kinds = field
dotnet_naming_symbols.champ_statique.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.champ_statique.required_modifiers = static

dotnet_naming_symbols.champ_privé_ou_interne.applicable_kinds = field
dotnet_naming_symbols.champ_privé_ou_interne.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.champ_privé_ou_interne.required_modifiers = 

dotnet_naming_symbols.champ_statique_privé_ou_interne.applicable_kinds = field
dotnet_naming_symbols.champ_statique_privé_ou_interne.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.champ_statique_privé_ou_interne.required_modifiers = static

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.membres_autres_que_des_champs.applicable_kinds = property, event, method
dotnet_naming_symbols.membres_autres_que_des_champs.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.membres_autres_que_des_champs.required_modifiers = 

dotnet_naming_symbols.paramètre.applicable_kinds = parameter
dotnet_naming_symbols.paramètre.applicable_accessibilities = *
dotnet_naming_symbols.paramètre.required_modifiers = 

dotnet_naming_symbols.type_parameters.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameters.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters.required_modifiers = 


# Naming Styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.commence_par_i.required_prefix = I
dotnet_naming_style.commence_par_i.required_suffix = 
dotnet_naming_style.commence_par_i.word_separator = 
dotnet_naming_style.commence_par_i.capitalization = pascal_case

dotnet_naming_style.camel_case.required_prefix = 
dotnet_naming_style.camel_case.required_suffix = 
dotnet_naming_style.camel_case.word_separator = 
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.begins_with_t.capitalization = pascal_case
dotnet_naming_style.begins_with_t.required_prefix = T
